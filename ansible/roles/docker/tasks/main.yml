---
- name: Install base deps
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - git
    state: present
    update_cache: true

- name: Map Docker arch
  set_fact:
    docker_repo_arch: >-
      {{ 'amd64' if ansible_architecture in ['x86_64'] else
         'arm64' if ansible_architecture in ['aarch64'] else
         'armhf' if ansible_architecture in ['armv7l'] else
         ansible_architecture }}

- name: Create keyrings dir
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"

- name: Dearmor Docker GPG into keyring
  command: >
    gpg --dearmor --yes
    --output /etc/apt/keyrings/docker.gpg
    /etc/apt/keyrings/docker.asc
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Set permissions on keyring
  file:
    path: /etc/apt/keyrings/docker.gpg
    mode: "0644"

- name: Add Docker apt repo (stable)
  copy:
    dest: /etc/apt/sources.list.d/docker.list
    content: |
      deb [arch={{ docker_repo_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

- name: Install Docker Engine & plugins
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Ensure docker group exists
  group:
    name: docker
    state: present

- name: Add current user ({{ ansible_user_id }}) to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  when: ansible_user_id != "root"

- name: Reload systemd
  command: systemctl daemon-reload
  become: true

- name: Ensure docker is running
  service:
    name: docker
    state: started
    enabled: true
