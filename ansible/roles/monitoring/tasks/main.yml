---
- name: Create dirs for monitoring stack
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - /opt/monitoring
    - /opt/monitoring/prometheus
    - /opt/monitoring/grafana/provisioning/datasources
    - /opt/monitoring/grafana/provisioning/dashboards
    - /opt/monitoring/loki
    - /opt/monitoring/promtail

- name: Drop Prometheus config
  copy:
    dest: /opt/monitoring/prometheus/prometheus.yml
    mode: "0644"
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s

      scrape_configs:
        # node_exporter (CPU/load/mem/disk)
        - job_name: 'node'
          static_configs:
            - targets: ['node-exporter:9100']

        # cAdvisor (контейнеры)
        - job_name: 'cadvisor'
          static_configs:
            - targets: ['cadvisor:8080']

        # blackbox_exporter (HTTP availability/RTT)
        - job_name: 'blackbox_http'
          metrics_path: /probe
          params:
            module: [http_2xx]
          static_configs:
            - targets:
                - "https://{{ app_domain }}"
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: blackbox-exporter:9115

- name: Drop blackbox config
  copy:
    dest: /opt/monitoring/blackbox.yml
    mode: "0644"
    content: |
      modules:
        http_2xx:
          prober: http
          timeout: 10s
          http:
            method: GET
            preferred_ip_protocol: "ip4"
            valid_status_codes: []  # 2xx by default
            tls_config:
              insecure_skip_verify: false

- name: Drop Loki config (single-node, filesystem)
  copy:
    dest: /opt/monitoring/loki/loki-config.yml
    mode: "0644"
    content: |
      auth_enabled: false
      server:
        http_listen_port: 3100
      common:
        path_prefix: /loki
        replication_factor: 1
        ring:
          instance_addr: 127.0.0.1
          kvstore:
            store: inmemory
      schema_config:
        configs:
          - from: 2024-01-01
            store: boltdb-shipper
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h
      storage_config:
        boltdb_shipper:
          active_index_directory: /loki/index
          cache_location: /loki/boltdb-cache
          shared_store: filesystem
        filesystem:
          directory: /loki/chunks
      limits_config:
        ingestion_rate_mb: 8
        ingestion_burst_size_mb: 16
        reject_old_samples: true
        reject_old_samples_max_age: 168h

- name: Drop Promtail config (nginx + docker)
  copy:
    dest: /opt/monitoring/promtail/promtail-config.yml
    mode: "0644"
    content: |
      server:
        http_listen_port: 9080
        grpc_listen_port: 0

      positions:
        filename: /var/lib/promtail/positions.yaml

      clients:
        - url: http://loki:3100/loki/api/v1/push

      scrape_configs:
        # Nginx access/error
        - job_name: nginx-logs
          static_configs:
            - targets: [localhost]
              labels:
                job: nginx
                __path__: /var/log/nginx/*.log

        # Docker контейнеры (json)
        - job_name: docker-containers
          pipeline_stages:
            - docker: {}
          static_configs:
            - targets: [localhost]
              labels:
                job: docker
                __path__: /var/lib/docker/containers/*/*-json.log

- name: Drop Grafana datasource for Prometheus
  copy:
    dest: /opt/monitoring/grafana/provisioning/datasources/prometheus.yml
    mode: "0644"
    content: |
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          isDefault: true

- name: Drop Grafana datasource for Loki
  copy:
    dest: /opt/monitoring/grafana/provisioning/datasources/loki.yml
    mode: "0644"
    content: |
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          access: proxy
          url: http://loki:3100
          isDefault: false

- name: Drop monitoring docker-compose
  copy:
    dest: /opt/monitoring/docker-compose.yml
    mode: "0644"
    content: |
      services:
        prometheus:
          image: prom/prometheus:v2.55.0
          command:
            - --config.file=/etc/prometheus/prometheus.yml
          volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
          ports:
            - "127.0.0.1:9090:9090"
          depends_on:
            - node-exporter
            - blackbox-exporter
            - cadvisor
          restart: unless-stopped

        node-exporter:
          image: prom/node-exporter:v1.8.2
          command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--path.rootfs=/rootfs'
            - '--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run|var/lib/docker/.+)($|/)'
          volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
          restart: unless-stopped

        cadvisor:
          image: gcr.io/cadvisor/cadvisor:v0.49.1
          privileged: true
          volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
          ports:
            - "127.0.0.1:8080:8080"
          restart: unless-stopped

        blackbox-exporter:
          image: prom/blackbox-exporter:v0.25.0
          command:
            - --config.file=/etc/blackbox/blackbox.yml
          volumes:
            - ./blackbox.yml:/etc/blackbox/blackbox.yml:ro
          ports:
            - "127.0.0.1:9115:9115"
          restart: unless-stopped

        loki:
          image: grafana/loki:2.9.8
          command: -config.file=/etc/loki/loki-config.yml
          user: "0:0"
          volumes:
            - ./loki/loki-config.yml:/etc/loki/loki-config.yml:ro
            - ./loki:/loki
          ports:
            - "127.0.0.1:3100:3100"
          restart: unless-stopped

        promtail:
          image: grafana/promtail:2.9.8
          command: -config.file=/etc/promtail/promtail-config.yml
          volumes:
            - ./promtail/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
            - /var/log:/var/log:ro
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/lib/promtail:/var/lib/promtail
          restart: unless-stopped

        grafana:
          image: grafana/grafana:11.2.0
          environment:
            GF_SECURITY_ADMIN_USER: admin
            GF_SECURITY_ADMIN_PASSWORD: admin
            GF_PATHS_PROVISIONING: /etc/grafana/provisioning
          volumes:
            - ./grafana/provisioning:/etc/grafana/provisioning
            - grafana-data:/var/lib/grafana
          ports:
            - "127.0.0.1:3000:3000"
          depends_on:
            - prometheus
            - loki
          restart: unless-stopped

      volumes:
        grafana-data: {}

- name: Up monitoring stack (always apply latest)
  shell: |
    docker compose -f /opt/monitoring/docker-compose.yml pull
    docker compose -f /opt/monitoring/docker-compose.yml up -d

- name: Mark deployed (marker file, но не блокирует апдейты)
  file:
    path: /opt/monitoring/.deployed
    state: touch
